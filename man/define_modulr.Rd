% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/special.R
\name{define_modulr}
\alias{define_modulr}
\title{# `modulr`}
\usage{
define_modulr()
}
\description{
Access module metadata and helper functions.
}
\details{
The purpose of this special module is to give access to metadata and
useful helper functions related to the module into which it is injected.

## Methods

### `get_module_name()`

Returns a string (character vector of lenght one) containing the module
name.

### `get_module_version()`

Returns the numeric version of the module.

### `get_module_options()`

Returns a list containing the module options. Deprecated and kept for
backward compatibility.

### `get_filename()`

Returns a string (character vector of lenght one) containing the module
filename.

### `get_dirname()`

Returns a string (character vector of lenght one) containing the module
dirname.

### `post_evaluation_hook(expr, add = FALSE)`

Records the expression given as its argument as needing to be executed
when the current module evaluation exits (either naturally or as the
result of an error). If no expression is provided, i.e., the call is
`post_evaluation_hook()`, then the current expression is removed. If
`add` is `TRUE`, `expr` is added after any previously set expressions;
otherwise (the default) `expr` will overwrite any previously set
expressions.

### `message_info(...)`, `message_warn(...)`, `message_stop(...)`

Outputs an informative, warning, or critical and stopping message,
prefixed with a timestamp and the module name. Such messages are
particularily useful in modules involved in long chains of dependencies
and workflows.
}

