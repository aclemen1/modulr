% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/define.R
\name{clone}
\alias{\%clones\%}
\alias{clone}
\title{Clone a Module.}
\usage{
clone(name, from_name, deep = FALSE)
}
\arguments{
\item{name}{A string (character vector of lenght one).

  A module name can contain letters, figures and some special characters,
  namely \code{_}, \code{-}, and \code{/}. The latter is a namespace
  separator.

  Names containing \code{/mock/}, \code{/mocks/}, \code{/test/},
  \code{/tests/}, \code{/example/}, or \code{/examples/} have a special
  meaning related to code testing and examples.

  The name "modulr" corresponds to a special module and is therefore
  reserved.}

\item{from_name}{Name of module to clone.}

\item{deep}{A flag. Should the entire register entry be cloned?}
}
\value{
A wrapper function around a make call for the defined module.
}
\description{
Clone a module.
}
\details{
For versioning purposes, it is often useful to clone modules.
}
\section{Warning}{

 It is considered a very bad practice to define, touch, undefine, load, make,
 reset, or perform any other operation from within a module definition that
 may alterate the internal state of modulr.
}
\examples{
reset()
define("foo", NULL, function() "foo")
clone("bar", "foo")
make("bar")

}
\seealso{
\code{\link{define}}, \code{\link{make}}, \code{\link{reset}},
  and \code{\link{root_config}}.
}

