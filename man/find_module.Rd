% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/routes.R
\name{find_module}
\alias{find_module}
\title{Find a Module.}
\usage{
find_module(name, scope_name = NULL, absolute = TRUE, extensions = c(".R",
  ".r", ".Rmd", ".rmd", ".Rnw", ".rnw"))
}
\arguments{
\item{name}{A string (character vector of lenght one).

  A module name can contain letters, figures and some special characters,
  namely \code{_}, \code{-}, and \code{/}. The latter is a namespace
  separator.

  Names containing \code{/mock/}, \code{/mocks/}, \code{/test/},
  \code{/tests/}, \code{/example/}, or \code{/examples/} have a special
  meaning related to code testing and examples.

  The name "modulr" corresponds to a special module and is therefore
  reserved.}

\item{scope_name}{A module name to use as scope (see \code{\link{define}},
\code{\link{maps_config}}, and examples).}

\item{absolute}{A flag. Should the returned path be absolute? (see
\code{\link{define}}, \code{\link{root_config}}, and examples)}

\item{extensions}{A character vector. File extensions to consider.}
}
\value{
A list containing informations relative to the module: name, version,
  in-memory or on-disk storage, and file path (absolute or relative).
}
\description{
Find a module, in the context of a module scope, if any.
}
\examples{
reset()
define("foo", NULL, function() "Hello World!")
find_module("foo")

reset()
tmp_dir <- tempfile("modulr_")
dir.create(tmp_dir)
tmp_file <- file.path(tmp_dir, "foo.R")
cat('define("foo", NULL, function() "Hello World!")', file = tmp_file)
root_config$set(tmp_dir)
set_verbosity(1L)
find_module("foo")
unlink(tmp_dir, recursive = TRUE)

reset()
tmp_dir <- tempfile("modulr_")
dir.create(file.path(tmp_dir, 'foo'), recursive = TRUE)
dir.create(file.path(tmp_dir, 'vendor'), recursive = TRUE)
cat(paste0('define("bar", list(great_module = "vendor/great_module"), ',
           'function() great_module)'),
    file = file.path(tmp_dir, "foo", "bar.R"))
cat('define("great_module", NULL, function() "Great Module")',
    file = file.path(tmp_dir, "vendor", "great_module.R"))
cat('define("great_module", NULL, function() "Old Great Module")',
    file = file.path(tmp_dir, "vendor", "old_great_module.R"))
root_config$set(tmp_dir)
set_verbosity(1L)
find_module("vendor/great_module")
maps_config$set("foo/bar" = list("vendor/great_module" =
                                 "vendor/old_great_module"))
find_module("vendor/great_module", "foo/bar")
unlink(tmp_dir, recursive = TRUE)

}
\seealso{
\code{\link{define}}, \code{\link{find_path}},
  \code{\link{maps_config}}, \code{\link{reset}}, and
  \code{\link{root_config}},
}

