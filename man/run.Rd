% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{run}
\alias{do.run}
\alias{do.run_async}
\alias{do_run}
\alias{do_run_async}
\alias{run}
\alias{run_async}
\title{Run a Module (experimental).}
\usage{
run(name = .Last.name, ...)

do_run(name = .Last.name, args = list(), quote = FALSE,
  envir = parent.frame(1L), pre_hook = NULL, post_hook = NULL)

do.run(name = .Last.name, args = list(), quote = FALSE,
  envir = parent.frame(1L), pre_hook = NULL, post_hook = NULL)

run_async(name = .Last.name, ...)

do_run_async(name = .Last.name, args = list(), quote = FALSE,
  envir = parent.frame(1L), pre_hook = NULL, post_hook = NULL, ...)

do.run_async(name = .Last.name, args = list(), quote = FALSE,
  envir = parent.frame(1L), pre_hook = NULL, post_hook = NULL, ...)
}
\arguments{
\item{name}{A string (character vector of lenght one).

  A module name can contain letters, figures and some special characters,
  namely \code{_}, \code{-}, and \code{/}. The latter is a namespace
  separator.

  Names containing \code{/mock/}, \code{/mocks/}, \code{/test/},
  \code{/tests/}, \code{/example/}, or \code{/examples/} have a special
  meaning related to code testing and examples.

  The name "modulr" corresponds to a special module and is therefore
  reserved.}

\item{...}{For \code{run} and \code{run_async}, further arguments to be
passed for evaluation to the resulting function, if any (see
\code{\link{make}}). For \code{do_run_async}, further arguments to be
passed to \code{\link[parallel]{mcparallel}}.}

\item{args}{A list of arguments to be passed to the resulting function, if
any. The \code{names} attribute of \code{args} gives the argument names.}

\item{quote}{A flag. Should the arguments be quoted?}

\item{envir}{An environment within which to evaluate the function call, if
any. This will be most useful if the arguments are symbols or quoted
expressions.}

\item{pre_hook}{An expression. Code to be evaluated before the script.}

\item{post_hook}{An expression. Code to be evaluated after the script. The
`result` variable contains the result of the script evaluation.}
}
\description{
Run a module as a standalone script. Asynchronous functions are based on
forking and so are not available on Windows.
}
\details{
Experimental.
}

